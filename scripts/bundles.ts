import { readdir } from 'node:fs/promises';
import { resolve } from 'node:path';
import pino from 'pino';

const Pinologger = pino({
	transport: {
		target: 'pino-pretty',
	},
});

const commandFiles = (await readdir(resolve('./src/commands'), { recursive: true })).filter(
	(file) => file.endsWith('.cmd.ts')
);
const eventFiles = (await readdir(resolve('./src/events'), { recursive: true })).filter((file) =>
	file.endsWith('.evt.ts')
);

const commandsBundle = Bun.file('./src/@ddev/bundle.commands.ts');
await Bun.write(
	commandsBundle,
	`// This file is automatically generated by the 'bun run bundles' command.
${commandFiles.map((file) => `import "../commands/${file}"\n`).join('')}
	`
);
Pinologger.info("Created 'commands' bundle");

const eventsBundle = Bun.file('./src/@ddev/bundle.events.ts');
await Bun.write(
	eventsBundle,
	`// This file is automatically generated by the 'bun run bundles' command.
${eventFiles.map((file) => `import "../events/${file}"\n`).join('')}
	`
);
Pinologger.info("Created 'events' bundle");
